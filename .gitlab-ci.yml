##############################################################
# Variables.
##############################################################
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULES: init

##############################################################
# Build that shit.
##############################################################
build/dev:
  stage: build
  image: mcr.microsoft.com/dotnet/core/sdk:3.0
  only:
    - develop
  except:
    - tags
  before_script:
    - bash ./gen-kos-safe-core.sh
  script:
    - dotnet restore
    - dotnet build

build/win-x64:
  stage: build
  image: mcr.microsoft.com/dotnet/core/sdk:3.0
  only:
    - master
  except:
    - tags
  before_script:
    - bash ./gen-kos-safe-core.sh
  script:
    - cd ./kOS.Cli
    - dotnet publish -r win-x64 -c Release -o ../win-x64 /p:UseAppHost=true /p:PublishSingleFile=true /p:PublishTrimmed=true
  artifacts:
    paths:
      - ./win-x64

build/win-x86:
  stage: build
  image: mcr.microsoft.com/dotnet/core/sdk:3.0
  only:
    - master
  except:
    - tags
  before_script:
    - export PATH="$PATH:/root/.dotnet/tools"
    - bash ./gen-kos-safe-core.sh
  script:
    - cd ./kOS.Cli
    - dotnet publish -r win-x86 -c Release -o ../win-x86 /p:UseAppHost=true /p:PublishSingleFile=true /p:PublishTrimmed=true
  artifacts:
    paths:
      - ./win-x86

build/linux-x64:
  stage: build
  image: mcr.microsoft.com/dotnet/core/sdk:3.0
  only:
    - master
  except:
    - tags
  before_script:
    - export PATH="$PATH:/root/.dotnet/tools"
    - bash ./gen-kos-safe-core.sh
  script:
    - cd ./kOS.Cli
    - dotnet publish -r linux-x64 -c Release -o ../linux-x64 /p:UseAppHost=true /p:PublishSingleFile=true /p:PublishTrimmed=true
  artifacts:
    paths:
      - ./linux-x64

build/osx-x64:
  stage: build
  image: mcr.microsoft.com/dotnet/core/sdk:3.0
  only:
    - master
  except:
    - tags
  before_script:
    - export PATH="$PATH:/root/.dotnet/tools"
    - bash ./gen-kos-safe-core.sh
  script:
    - cd ./kOS.Cli
    - dotnet publish -r osx-x64 -c Release -o ../osx-x64 /p:UseAppHost=true /p:PublishSingleFile=true /p:PublishTrimmed=true
  artifacts:
    paths:
      - ./osx-x64


##############################################################
# Running unit tests.
##############################################################
test/unit-testing:
  stage: test
  image: mcr.microsoft.com/dotnet/core/sdk:3.0
  except:
    - tags
  before_script:
    - bash ./gen-kos-safe-core.sh
  script:
    - dotnet test
  dependencies: []


##############################################################
# Deployment.
##############################################################
deploy/npm:
  stage: deploy
  image: node:latest
  only:
    - master
  except:
    - tags
  script:
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
    - npm publish

